@* Interface Enumarable = Enumarate or list (to ascertain the number of : count) *@

@model IEnumerable<MariaPersonalStudyGroup.Models.Student>

@{
    ViewBag.Title = "StudentList";
}

<h2>Student List</h2>

<table id="studentTable" class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.StudentNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Surname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MyLink)
        </th>
        <th>DELETE</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.StudentNumber)</td>
            <td>@Html.DisplayFor(modelItem => item.Name)</td>
            <td>@Html.DisplayFor(modelItem => item.Surname)</td>
            <td>@Html.DisplayFor(modelItem => item.Email)</td>
            <td>
                <a href="@item.MyLink" class="btn btn-link" target="_blank">LINK</a>
            </td>
            <td>
                <a href="javascript:void(0);" class="btn btn-success" onclick="deleteRow(this)">Delete</a>
            </td>
        </tr>
    }
</table>

<script>
    // Delete row when delete button is clicked
    function deleteRow(button) {
        var row = button.closest("tr");
        row.parentNode.removeChild(row);
    }

</script>


<script src="~/Scripts/NewJavaScript.js"></script>